//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: ChatDcps.h
//  Source: ChatDcps.idl
//  Generated: Sat Jun  4 21:35:03 2016
//  OpenSplice V6.4.140407OSS
//  
//******************************************************************
#ifndef _CHATDCPS_H_
#define _CHATDCPS_H_

#include "sacpp_mapping.h"
#include "sacpp_DDS_DCPS.h"
#include "Chat.h"
#include "dds_dcps.h"


namespace Chat
{

   class ChatMessageTypeSupportInterface;

   typedef ChatMessageTypeSupportInterface * ChatMessageTypeSupportInterface_ptr;
   typedef DDS_DCPSInterface_var < ChatMessageTypeSupportInterface> ChatMessageTypeSupportInterface_var;
   typedef DDS_DCPSInterface_out < ChatMessageTypeSupportInterface> ChatMessageTypeSupportInterface_out;


   class ChatMessageDataWriter;

   typedef ChatMessageDataWriter * ChatMessageDataWriter_ptr;
   typedef DDS_DCPSInterface_var < ChatMessageDataWriter> ChatMessageDataWriter_var;
   typedef DDS_DCPSInterface_out < ChatMessageDataWriter> ChatMessageDataWriter_out;


   class ChatMessageDataReader;

   typedef ChatMessageDataReader * ChatMessageDataReader_ptr;
   typedef DDS_DCPSInterface_var < ChatMessageDataReader> ChatMessageDataReader_var;
   typedef DDS_DCPSInterface_out < ChatMessageDataReader> ChatMessageDataReader_out;


   class ChatMessageDataReaderView;

   typedef ChatMessageDataReaderView * ChatMessageDataReaderView_ptr;
   typedef DDS_DCPSInterface_var < ChatMessageDataReaderView> ChatMessageDataReaderView_var;
   typedef DDS_DCPSInterface_out < ChatMessageDataReaderView> ChatMessageDataReaderView_out;


   class NameServiceTypeSupportInterface;

   typedef NameServiceTypeSupportInterface * NameServiceTypeSupportInterface_ptr;
   typedef DDS_DCPSInterface_var < NameServiceTypeSupportInterface> NameServiceTypeSupportInterface_var;
   typedef DDS_DCPSInterface_out < NameServiceTypeSupportInterface> NameServiceTypeSupportInterface_out;


   class NameServiceDataWriter;

   typedef NameServiceDataWriter * NameServiceDataWriter_ptr;
   typedef DDS_DCPSInterface_var < NameServiceDataWriter> NameServiceDataWriter_var;
   typedef DDS_DCPSInterface_out < NameServiceDataWriter> NameServiceDataWriter_out;


   class NameServiceDataReader;

   typedef NameServiceDataReader * NameServiceDataReader_ptr;
   typedef DDS_DCPSInterface_var < NameServiceDataReader> NameServiceDataReader_var;
   typedef DDS_DCPSInterface_out < NameServiceDataReader> NameServiceDataReader_out;


   class NameServiceDataReaderView;

   typedef NameServiceDataReaderView * NameServiceDataReaderView_ptr;
   typedef DDS_DCPSInterface_var < NameServiceDataReaderView> NameServiceDataReaderView_var;
   typedef DDS_DCPSInterface_out < NameServiceDataReaderView> NameServiceDataReaderView_out;


   class NamedMessageTypeSupportInterface;

   typedef NamedMessageTypeSupportInterface * NamedMessageTypeSupportInterface_ptr;
   typedef DDS_DCPSInterface_var < NamedMessageTypeSupportInterface> NamedMessageTypeSupportInterface_var;
   typedef DDS_DCPSInterface_out < NamedMessageTypeSupportInterface> NamedMessageTypeSupportInterface_out;


   class NamedMessageDataWriter;

   typedef NamedMessageDataWriter * NamedMessageDataWriter_ptr;
   typedef DDS_DCPSInterface_var < NamedMessageDataWriter> NamedMessageDataWriter_var;
   typedef DDS_DCPSInterface_out < NamedMessageDataWriter> NamedMessageDataWriter_out;


   class NamedMessageDataReader;

   typedef NamedMessageDataReader * NamedMessageDataReader_ptr;
   typedef DDS_DCPSInterface_var < NamedMessageDataReader> NamedMessageDataReader_var;
   typedef DDS_DCPSInterface_out < NamedMessageDataReader> NamedMessageDataReader_out;


   class NamedMessageDataReaderView;

   typedef NamedMessageDataReaderView * NamedMessageDataReaderView_ptr;
   typedef DDS_DCPSInterface_var < NamedMessageDataReaderView> NamedMessageDataReaderView_var;
   typedef DDS_DCPSInterface_out < NamedMessageDataReaderView> NamedMessageDataReaderView_out;

   struct ChatMessageSeq_uniq_ {};
   typedef DDS_DCPSUVLSeq < ChatMessage, struct ChatMessageSeq_uniq_> ChatMessageSeq;
   typedef DDS_DCPSSequence_var < ChatMessageSeq> ChatMessageSeq_var;
   typedef DDS_DCPSSequence_out < ChatMessageSeq> ChatMessageSeq_out;
   class ChatMessageTypeSupportInterface
   :
      virtual public DDS::TypeSupport
   { 
   public:
      typedef ChatMessageTypeSupportInterface_ptr _ptr_type;
      typedef ChatMessageTypeSupportInterface_var _var_type;

      static ChatMessageTypeSupportInterface_ptr _duplicate (ChatMessageTypeSupportInterface_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static ChatMessageTypeSupportInterface_ptr _narrow (DDS::Object_ptr obj);
      static ChatMessageTypeSupportInterface_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static ChatMessageTypeSupportInterface_ptr _nil () { return 0; }
      static const char * _local_id;
      ChatMessageTypeSupportInterface_ptr _this () { return this; }


   protected:
      ChatMessageTypeSupportInterface () {};
      ~ChatMessageTypeSupportInterface () {};
   private:
      ChatMessageTypeSupportInterface (const ChatMessageTypeSupportInterface &);
      ChatMessageTypeSupportInterface & operator = (const ChatMessageTypeSupportInterface &);
   };

   class ChatMessageDataWriter
   :
      virtual public DDS::DataWriter
   { 
   public:
      typedef ChatMessageDataWriter_ptr _ptr_type;
      typedef ChatMessageDataWriter_var _var_type;

      static ChatMessageDataWriter_ptr _duplicate (ChatMessageDataWriter_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static ChatMessageDataWriter_ptr _narrow (DDS::Object_ptr obj);
      static ChatMessageDataWriter_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static ChatMessageDataWriter_ptr _nil () { return 0; }
      static const char * _local_id;
      ChatMessageDataWriter_ptr _this () { return this; }

      virtual DDS::LongLong register_instance (const ChatMessage& instance_data) = 0;
      virtual DDS::LongLong register_instance_w_timestamp (const ChatMessage& instance_data, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long unregister_instance (const ChatMessage& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long unregister_instance_w_timestamp (const ChatMessage& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long write (const ChatMessage& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long write_w_timestamp (const ChatMessage& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long dispose (const ChatMessage& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long dispose_w_timestamp (const ChatMessage& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long writedispose (const ChatMessage& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long writedispose_w_timestamp (const ChatMessage& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long get_key_value (ChatMessage& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const ChatMessage& instance_data) = 0;

   protected:
      ChatMessageDataWriter () {};
      ~ChatMessageDataWriter () {};
   private:
      ChatMessageDataWriter (const ChatMessageDataWriter &);
      ChatMessageDataWriter & operator = (const ChatMessageDataWriter &);
   };

   class ChatMessageDataReader
   :
      virtual public DDS::DataReader
   { 
   public:
      typedef ChatMessageDataReader_ptr _ptr_type;
      typedef ChatMessageDataReader_var _var_type;

      static ChatMessageDataReader_ptr _duplicate (ChatMessageDataReader_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static ChatMessageDataReader_ptr _narrow (DDS::Object_ptr obj);
      static ChatMessageDataReader_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static ChatMessageDataReader_ptr _nil () { return 0; }
      static const char * _local_id;
      ChatMessageDataReader_ptr _this () { return this; }

      virtual DDS::Long read (ChatMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take (ChatMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_w_condition (ChatMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_w_condition (ChatMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long read_next_sample (ChatMessage& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long take_next_sample (ChatMessage& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long read_instance (ChatMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_instance (ChatMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance (ChatMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_next_instance (ChatMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance_w_condition (ChatMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_next_instance_w_condition (ChatMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long return_loan (ChatMessageSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::Long get_key_value (ChatMessage& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const ChatMessage& instance) = 0;

   protected:
      ChatMessageDataReader () {};
      ~ChatMessageDataReader () {};
   private:
      ChatMessageDataReader (const ChatMessageDataReader &);
      ChatMessageDataReader & operator = (const ChatMessageDataReader &);
   };

   class ChatMessageDataReaderView
   :
      virtual public DDS::DataReaderView
   { 
   public:
      typedef ChatMessageDataReaderView_ptr _ptr_type;
      typedef ChatMessageDataReaderView_var _var_type;

      static ChatMessageDataReaderView_ptr _duplicate (ChatMessageDataReaderView_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static ChatMessageDataReaderView_ptr _narrow (DDS::Object_ptr obj);
      static ChatMessageDataReaderView_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static ChatMessageDataReaderView_ptr _nil () { return 0; }
      static const char * _local_id;
      ChatMessageDataReaderView_ptr _this () { return this; }

      virtual DDS::Long read (ChatMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take (ChatMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_w_condition (ChatMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_w_condition (ChatMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long read_next_sample (ChatMessage& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long take_next_sample (ChatMessage& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long read_instance (ChatMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_instance (ChatMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance (ChatMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_next_instance (ChatMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance_w_condition (ChatMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_next_instance_w_condition (ChatMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long return_loan (ChatMessageSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::Long get_key_value (ChatMessage& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const ChatMessage& instance) = 0;

   protected:
      ChatMessageDataReaderView () {};
      ~ChatMessageDataReaderView () {};
   private:
      ChatMessageDataReaderView (const ChatMessageDataReaderView &);
      ChatMessageDataReaderView & operator = (const ChatMessageDataReaderView &);
   };

   struct NameServiceSeq_uniq_ {};
   typedef DDS_DCPSUVLSeq < NameService, struct NameServiceSeq_uniq_> NameServiceSeq;
   typedef DDS_DCPSSequence_var < NameServiceSeq> NameServiceSeq_var;
   typedef DDS_DCPSSequence_out < NameServiceSeq> NameServiceSeq_out;
   class NameServiceTypeSupportInterface
   :
      virtual public DDS::TypeSupport
   { 
   public:
      typedef NameServiceTypeSupportInterface_ptr _ptr_type;
      typedef NameServiceTypeSupportInterface_var _var_type;

      static NameServiceTypeSupportInterface_ptr _duplicate (NameServiceTypeSupportInterface_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static NameServiceTypeSupportInterface_ptr _narrow (DDS::Object_ptr obj);
      static NameServiceTypeSupportInterface_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static NameServiceTypeSupportInterface_ptr _nil () { return 0; }
      static const char * _local_id;
      NameServiceTypeSupportInterface_ptr _this () { return this; }


   protected:
      NameServiceTypeSupportInterface () {};
      ~NameServiceTypeSupportInterface () {};
   private:
      NameServiceTypeSupportInterface (const NameServiceTypeSupportInterface &);
      NameServiceTypeSupportInterface & operator = (const NameServiceTypeSupportInterface &);
   };

   class NameServiceDataWriter
   :
      virtual public DDS::DataWriter
   { 
   public:
      typedef NameServiceDataWriter_ptr _ptr_type;
      typedef NameServiceDataWriter_var _var_type;

      static NameServiceDataWriter_ptr _duplicate (NameServiceDataWriter_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static NameServiceDataWriter_ptr _narrow (DDS::Object_ptr obj);
      static NameServiceDataWriter_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static NameServiceDataWriter_ptr _nil () { return 0; }
      static const char * _local_id;
      NameServiceDataWriter_ptr _this () { return this; }

      virtual DDS::LongLong register_instance (const NameService& instance_data) = 0;
      virtual DDS::LongLong register_instance_w_timestamp (const NameService& instance_data, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long unregister_instance (const NameService& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long unregister_instance_w_timestamp (const NameService& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long write (const NameService& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long write_w_timestamp (const NameService& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long dispose (const NameService& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long dispose_w_timestamp (const NameService& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long writedispose (const NameService& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long writedispose_w_timestamp (const NameService& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long get_key_value (NameService& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const NameService& instance_data) = 0;

   protected:
      NameServiceDataWriter () {};
      ~NameServiceDataWriter () {};
   private:
      NameServiceDataWriter (const NameServiceDataWriter &);
      NameServiceDataWriter & operator = (const NameServiceDataWriter &);
   };

   class NameServiceDataReader
   :
      virtual public DDS::DataReader
   { 
   public:
      typedef NameServiceDataReader_ptr _ptr_type;
      typedef NameServiceDataReader_var _var_type;

      static NameServiceDataReader_ptr _duplicate (NameServiceDataReader_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static NameServiceDataReader_ptr _narrow (DDS::Object_ptr obj);
      static NameServiceDataReader_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static NameServiceDataReader_ptr _nil () { return 0; }
      static const char * _local_id;
      NameServiceDataReader_ptr _this () { return this; }

      virtual DDS::Long read (NameServiceSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take (NameServiceSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_w_condition (NameServiceSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_w_condition (NameServiceSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long read_next_sample (NameService& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long take_next_sample (NameService& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long read_instance (NameServiceSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_instance (NameServiceSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance (NameServiceSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_next_instance (NameServiceSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance_w_condition (NameServiceSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_next_instance_w_condition (NameServiceSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long return_loan (NameServiceSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::Long get_key_value (NameService& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const NameService& instance) = 0;

   protected:
      NameServiceDataReader () {};
      ~NameServiceDataReader () {};
   private:
      NameServiceDataReader (const NameServiceDataReader &);
      NameServiceDataReader & operator = (const NameServiceDataReader &);
   };

   class NameServiceDataReaderView
   :
      virtual public DDS::DataReaderView
   { 
   public:
      typedef NameServiceDataReaderView_ptr _ptr_type;
      typedef NameServiceDataReaderView_var _var_type;

      static NameServiceDataReaderView_ptr _duplicate (NameServiceDataReaderView_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static NameServiceDataReaderView_ptr _narrow (DDS::Object_ptr obj);
      static NameServiceDataReaderView_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static NameServiceDataReaderView_ptr _nil () { return 0; }
      static const char * _local_id;
      NameServiceDataReaderView_ptr _this () { return this; }

      virtual DDS::Long read (NameServiceSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take (NameServiceSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_w_condition (NameServiceSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_w_condition (NameServiceSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long read_next_sample (NameService& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long take_next_sample (NameService& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long read_instance (NameServiceSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_instance (NameServiceSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance (NameServiceSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_next_instance (NameServiceSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance_w_condition (NameServiceSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_next_instance_w_condition (NameServiceSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long return_loan (NameServiceSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::Long get_key_value (NameService& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const NameService& instance) = 0;

   protected:
      NameServiceDataReaderView () {};
      ~NameServiceDataReaderView () {};
   private:
      NameServiceDataReaderView (const NameServiceDataReaderView &);
      NameServiceDataReaderView & operator = (const NameServiceDataReaderView &);
   };

   struct NamedMessageSeq_uniq_ {};
   typedef DDS_DCPSUVLSeq < NamedMessage, struct NamedMessageSeq_uniq_> NamedMessageSeq;
   typedef DDS_DCPSSequence_var < NamedMessageSeq> NamedMessageSeq_var;
   typedef DDS_DCPSSequence_out < NamedMessageSeq> NamedMessageSeq_out;
   class NamedMessageTypeSupportInterface
   :
      virtual public DDS::TypeSupport
   { 
   public:
      typedef NamedMessageTypeSupportInterface_ptr _ptr_type;
      typedef NamedMessageTypeSupportInterface_var _var_type;

      static NamedMessageTypeSupportInterface_ptr _duplicate (NamedMessageTypeSupportInterface_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static NamedMessageTypeSupportInterface_ptr _narrow (DDS::Object_ptr obj);
      static NamedMessageTypeSupportInterface_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static NamedMessageTypeSupportInterface_ptr _nil () { return 0; }
      static const char * _local_id;
      NamedMessageTypeSupportInterface_ptr _this () { return this; }


   protected:
      NamedMessageTypeSupportInterface () {};
      ~NamedMessageTypeSupportInterface () {};
   private:
      NamedMessageTypeSupportInterface (const NamedMessageTypeSupportInterface &);
      NamedMessageTypeSupportInterface & operator = (const NamedMessageTypeSupportInterface &);
   };

   class NamedMessageDataWriter
   :
      virtual public DDS::DataWriter
   { 
   public:
      typedef NamedMessageDataWriter_ptr _ptr_type;
      typedef NamedMessageDataWriter_var _var_type;

      static NamedMessageDataWriter_ptr _duplicate (NamedMessageDataWriter_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static NamedMessageDataWriter_ptr _narrow (DDS::Object_ptr obj);
      static NamedMessageDataWriter_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static NamedMessageDataWriter_ptr _nil () { return 0; }
      static const char * _local_id;
      NamedMessageDataWriter_ptr _this () { return this; }

      virtual DDS::LongLong register_instance (const NamedMessage& instance_data) = 0;
      virtual DDS::LongLong register_instance_w_timestamp (const NamedMessage& instance_data, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long unregister_instance (const NamedMessage& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long unregister_instance_w_timestamp (const NamedMessage& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long write (const NamedMessage& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long write_w_timestamp (const NamedMessage& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long dispose (const NamedMessage& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long dispose_w_timestamp (const NamedMessage& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long writedispose (const NamedMessage& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long writedispose_w_timestamp (const NamedMessage& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long get_key_value (NamedMessage& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const NamedMessage& instance_data) = 0;

   protected:
      NamedMessageDataWriter () {};
      ~NamedMessageDataWriter () {};
   private:
      NamedMessageDataWriter (const NamedMessageDataWriter &);
      NamedMessageDataWriter & operator = (const NamedMessageDataWriter &);
   };

   class NamedMessageDataReader
   :
      virtual public DDS::DataReader
   { 
   public:
      typedef NamedMessageDataReader_ptr _ptr_type;
      typedef NamedMessageDataReader_var _var_type;

      static NamedMessageDataReader_ptr _duplicate (NamedMessageDataReader_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static NamedMessageDataReader_ptr _narrow (DDS::Object_ptr obj);
      static NamedMessageDataReader_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static NamedMessageDataReader_ptr _nil () { return 0; }
      static const char * _local_id;
      NamedMessageDataReader_ptr _this () { return this; }

      virtual DDS::Long read (NamedMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take (NamedMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_w_condition (NamedMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_w_condition (NamedMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long read_next_sample (NamedMessage& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long take_next_sample (NamedMessage& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long read_instance (NamedMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_instance (NamedMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance (NamedMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_next_instance (NamedMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance_w_condition (NamedMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_next_instance_w_condition (NamedMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long return_loan (NamedMessageSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::Long get_key_value (NamedMessage& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const NamedMessage& instance) = 0;

   protected:
      NamedMessageDataReader () {};
      ~NamedMessageDataReader () {};
   private:
      NamedMessageDataReader (const NamedMessageDataReader &);
      NamedMessageDataReader & operator = (const NamedMessageDataReader &);
   };

   class NamedMessageDataReaderView
   :
      virtual public DDS::DataReaderView
   { 
   public:
      typedef NamedMessageDataReaderView_ptr _ptr_type;
      typedef NamedMessageDataReaderView_var _var_type;

      static NamedMessageDataReaderView_ptr _duplicate (NamedMessageDataReaderView_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static NamedMessageDataReaderView_ptr _narrow (DDS::Object_ptr obj);
      static NamedMessageDataReaderView_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static NamedMessageDataReaderView_ptr _nil () { return 0; }
      static const char * _local_id;
      NamedMessageDataReaderView_ptr _this () { return this; }

      virtual DDS::Long read (NamedMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take (NamedMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_w_condition (NamedMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_w_condition (NamedMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long read_next_sample (NamedMessage& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long take_next_sample (NamedMessage& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long read_instance (NamedMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_instance (NamedMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance (NamedMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_next_instance (NamedMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance_w_condition (NamedMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_next_instance_w_condition (NamedMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long return_loan (NamedMessageSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::Long get_key_value (NamedMessage& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const NamedMessage& instance) = 0;

   protected:
      NamedMessageDataReaderView () {};
      ~NamedMessageDataReaderView () {};
   private:
      NamedMessageDataReaderView (const NamedMessageDataReaderView &);
      NamedMessageDataReaderView & operator = (const NamedMessageDataReaderView &);
   };

}




#endif 
